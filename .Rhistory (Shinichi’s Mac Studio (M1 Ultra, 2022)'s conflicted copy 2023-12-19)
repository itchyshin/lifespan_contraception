species = species,
phylogeny = phylogeny,
category = "F surgical/M surgical"
)
dat_fm_ss <- escalc("ROM",
m1i = F_surgical_m,
m2i = M_surgical_m,
sd1i = F_surgical_sd,
sd2i = M_surgical_sd,
n1i = F_surgical_n,
n2i = M_surgical_n,
data = dat_fm_ss,
)
# female normal vs. male normal (5)
dat_fm_nn <- dat %>% filter(is.na(Female_None_Mean) == FALSE,
is.na(Male_None_Mean) == FALSE) %>%
transmute(F_normal_m = Female_None_Mean,
F_normal_sd = sqrt(Female.None*Female_None_SE),
F_normal_n = Female.None,
M_normal_m = Male_None_Mean,
M_normal_sd = sqrt(Male.None*Male_None_SE),
M_normal_n = Male.None,
species = species,
phylogeny = phylogeny,
category = "F normal/M normal"
)
dat_fm_nn <- escalc("ROM",
m1i = F_normal_m,
m2i = M_normal_m,
sd1i = F_normal_sd,
sd2i = M_normal_sd,
n1i = F_normal_n,
n2i = M_normal_n,
data = dat_fm_nn,
)
# female normal vs. male hormonal (6)
dat_fm_nh <- dat %>% filter(is.na(Female_None_Mean) == FALSE,
is.na(Male_Hormonal_Mean) == FALSE) %>%
transmute(F_normal_m = Female_None_Mean,
F_normal_sd = sqrt(Female.None*Female_None_SE),
F_normal_n = Female.None,
M_hornomal_m = Male_Hormonal_Mean,
M_hornomal_sd = sqrt(Male.Hormonal)*Male_Hormonal_SE,
M_hornomal_n = Male.Hormonal,
species = species,
phylogeny = phylogeny,
category = "F normal/M hornomal"
)
dat_fm_nh <- escalc("ROM",
m1i = F_normal_m,
m2i = M_hornomal_m,
sd1i = F_normal_sd,
sd2i = M_hornomal_sd,
n1i = F_normal_n,
n2i = M_hornomal_n,
data = dat_fm_nh,
)
# female normal vs. male immunological (7)
dat_fm_ni <- dat %>% filter(is.na(Female_None_Mean) == FALSE,
is.na(Male_Immunological_Mean) == FALSE) %>%
transmute(F_normal_m = Female_None_Mean,
F_normal_sd = sqrt(Female.None*Female_None_SE),
F_normal_n = Female.None,
M_immunological_m = Male_Immunological_Mean,
M_immunological_sd = sqrt(Male.Immunological)*Male_Immunological_SE,
M_immunological_n = Male.Immunological,
species = species,
phylogeny = phylogeny,
category = "F normal/M immunological"
)
dat_fm_ni <- escalc("ROM",
m1i = F_normal_m,
m2i = M_immunological_m,
sd1i = F_normal_sd,
sd2i = M_immunological_sd,
n1i = F_normal_n,
n2i = M_immunological_n,
data = dat_fm_ni,
)
# female immunological vs. male normal (8)
dat_fm_in <- dat %>% filter(is.na(Female_Immunological_Mean) == FALSE,
is.na(Male_None_Mean) == FALSE) %>%
transmute(F_immunological_m = Female_Immunological_Mean,
F_immunological_sd = sqrt(Female.Immunological*Female_Immunological_SE),
F_immunological_n = Female.Immunological,
M_normal_m = Male_None_Mean,
M_normal_sd = sqrt(Male.None)*Male_None_SE,
M_normal_n = Male.None,
species = species,
phylogeny = phylogeny,
category = "F immunological/M normal"
)
dat_fm_in <- escalc("ROM",
m1i = F_immunological_m,
m2i = M_normal_m,
sd1i = F_immunological_sd,
sd2i = M_normal_sd,
n1i = F_immunological_n,
n2i = M_normal_n,
data = dat_fm_in,
)
# female hormonal vs. male hormonal (9)
dat_fm_hh <- dat %>% filter(is.na(Female_Hormonal_Mean) == FALSE,
is.na(Male_Hormonal_Mean) == FALSE) %>%
transmute(F_hornomal_m = Female_Hormonal_Mean,
F_hornomal_sd = sqrt(Female.Hormonal*Female_Hormonal_SE),
F_hornomal_n = Female.Hormonal,
M_hornomal_m = Male_Hormonal_Mean,
M_hornomal_sd = sqrt(Male.Hormonal)*Male_Hormonal_SE,
M_hornomal_n = Male.Hormonal,
species = species,
phylogeny = phylogeny,
category = "F hornomal/M hornomal"
)
dat_fm_hh <- escalc("ROM",
m1i = F_hornomal_m,
m2i = M_hornomal_m,
sd1i = F_hornomal_sd,
sd2i = M_hornomal_sd,
n1i = F_hornomal_n,
n2i = M_hornomal_n,
data = dat_fm_hh,
)
# female immunological vs. male immunological (10)
dat_fm_ii <- dat %>% filter(is.na(Female_Immunological_Mean) == FALSE,
is.na(Male_Immunological_Mean) == FALSE) %>%
transmute(F_immunological_m = Female_Immunological_Mean,
F_immunological_sd = sqrt(Female.Immunological*Female_Immunological_SE),
F_immunological_n = Female.None,
M_immunological_m = Male_Immunological_Mean,
M_immunological_sd = sqrt(Male.Immunological)*Male_Immunological_SE,
M_immunological_n = Male.Immunological,
species = species,
phylogeny = phylogeny,
category = "F immunological/M immunological"
)
dat_fm_ii <- escalc("ROM",
m1i = F_immunological_m,
m2i = M_immunological_m,
sd1i = F_immunological_sd,
sd2i = M_immunological_sd,
n1i = F_immunological_n,
n2i = M_immunological_n,
data = dat_fm_ii,
)
rbind(
dat_fm_ns[ , 7:11], # 1
dat_fm_hn[ , 7:11], # 2
dat_fm_sn[ , 7:11], # 3
dat_fm_ss[ , 7:11], # 4
dat_fm_nn[ , 7:11], # 5
dat_fm_nh[ , 7:11], # 6
dat_fm_ni[ , 7:11], # 7
dat_fm_in[ , 7:11], # 8
dat_fm_hh[ , 7:11], # 9
dat_fm_ii[ , 7:11]  # 10
) -> dat_comb
dat_comb$obs_id <- factor(1:nrow(dat_comb))
# adding category
dat_comb$contraception <- factor(dat_comb$category, levels = c("F immunological/M immunological",
"F hornomal/M hornomal",
"F surgical/M surgical",
"F immunological/M normal",
"F hormonal/M normal",
"F surgical/M normal",
"F normal/M immunological",
"F normal/M hormonal",
"F normal/M surgical",
"F normal/M normal"),
labels = c("F contra./M contra.",
"F contra./M contra.",
"F contra./M contra.",
"F contra./M normal",
"F contra./M normal",
"F contra./M normal",
"F normal/M contra.",
"F normal/M contra.",
"F normal/M contra.",
"F normal/M normal"),
)
# absolute values
dat_comb <- dat_comb %>% mutate(
abs_yi = abs(yi), # we use this one (conservative)
abs_yi2 = folded_mu(yi, vi), # alternative way
abs_vi = folded_v(yi, vi))
#write_csv(dat_comb, here("data", "zoo", "effect2.csv"))
# Chunk 6
# getting effect size
dat_pre <- escalc("ROM",
m2i = F_normal_m,
m1i = F_hormonal_m,
sd2i = F_normal_sd,
sd1i = F_hormonal_sd,
n2i = F_normal_n,
n1i = F_hormonal_n,
data = dat_pre,
)
dat_post <- escalc("ROM",
m2i = F_normal_m,
m1i = F_hormonal_m,
sd2i = F_normal_sd,
sd1i = F_hormonal_sd,
n2i = F_normal_n,
n1i = F_hormonal_n,
data = dat_post,
)
# combining
rbind(
dat_pre[ , 7:10], # 1
dat_post[ , 7:10]# 2
) -> dat_pre_post
# 54 effect sizes and
# unique(dat_pre_post$species
dat_pre_post$obs_id <- factor(1:nrow(dat_pre_post))
# adding category
dat_pre_post$timing <- rep(c("Pre-2005","Post-2005"),c(dim(dat_pre)[1], dim(dat_post)[1]))
# Chunk 7
kable(dat, "html", escape = FALSE, digits = 3) %>% kable_styling("striped", position = "left", full_width = TRUE) %>%
scroll_box(width = "100%",
height = "500px")
# Chunk 8
kable(dat_all, "html", escape = FALSE, digits = 3) %>% kable_styling("striped", position = "left", full_width = TRUE) %>%
scroll_box(width = "100%",
height = "500px")
# Chunk 9
kable(dat_comb, "html", escape = FALSE, digits = 3) %>% kable_styling("striped", position = "left", full_width = TRUE) %>%
scroll_box(width = "100%",
height = "500px")
# Chunk 10
kable(dat_pre, "html", escape = FALSE, digits = 3) %>% kable_styling("striped", position = "left", full_width = TRUE) %>%
scroll_box(width = "100%",
height = "500px")
# Chunk 11
kable(dat_post, "html", escape = FALSE, digits = 3) %>% kable_styling("striped", position = "left", full_width = TRUE) %>%
scroll_box(width = "100%",
height = "500px")
# Chunk 12
kable(dat_pre_post, "html", escape = FALSE, digits = 3) %>% kable_styling("striped", position = "left", full_width = TRUE) %>%
scroll_box(width = "100%",
height = "500px")
# Chunk 13
# variance-covariance matrix for sampling error assuming 0.5 correlation
VCV <- vcalc(vi, species, rho = 0.5, data = dat_all)
mod_all <- rma.mv(yi, V = VCV,
random = list(
~1|species,
~1|phylogeny,
~1|obs_id),
R = list(phylogeny = cor_tree),
data = dat_all)
summary(mod_all)
round(i2_ml(mod_all), 2)
#robust(mod_all, cluster = species)
orchard_plot(mod_all, xlab = "lnRR (all)", group = "species", g = FALSE)
# Chunk 14
mod_all1 <- rma.mv(yi, V = VCV,
mod = ~ sex,
random = list(
~1|species,
~1|phylogeny,
~1|obs_id),
R = list(phylogeny = cor_tree),
data = dat_all)
summary(mod_all1)
mod_all1b <- rma.mv(yi, V = VCV,
mod = ~ sex - 1,
random = list(
~1|species,
~1|phylogeny,
~1|obs_id),
R = list(phylogeny = cor_tree),
data = dat_all)
summary(mod_all1b)
round(r2_ml(mod_all1), 2)
orchard_plot(mod_all1, mod = "sex",
xlab = "lnRR (all)", group = "species", g = FALSE)
# Chunk 15
dat_all$type <- factor(dat_all$type,
levels = rev(c("surgical", "hormonal", "immunological")))
mod_all2 <- rma.mv(yi, V = VCV,
mod = ~ type -1,
random = list(
~1|species,
~1|phylogeny,
~1|obs_id),
R = list(phylogeny = cor_tree),
data = dat_all)
summary(mod_all2)
# R^2 - hardly any
round(r2_ml(mod_all2)*100, 2)
orchard_plot(mod_all2, mod = "type",
xlab = "lnRR (all)", group = "species", g = FALSE, angle = 90)
# result table
all_models(mod_all2, mod = "type")
# Chunk 16
# variance-covariance matrix for sampling error assuming 0.5 correlation
VCV <- vcalc(vi, species, rho = 0.5, data = dat_comb)
mod_comb <- rma.mv(yi, V = VCV,
mods = ~contraception - 1,
random = list(
~1|species,
~1|phylogeny,
~1|obs_id),
R = list(phylogeny = cor_tree),
data = dat_comb,
control = list(optimizer = "Nelder-Mead"))
summary(mod_comb)
round(r2_ml(mod_comb)*100, 2)
#robust(mod_comb, cluster = species)
orchard_plot(mod_comb, mod = "contraception",
xlab = "log response ratio (lnRR)", group = "species",
g = FALSE, angle = 45)
all_models(mod_comb, mod = "contraception")
# Chunk 17
# variance-covariance matrix for sampling error assuming 0.5 correlation
VCVa <- vcalc(abs_vi, species, rho = 0.5, data = dat_comb)
mod_comb_a <- rma.mv(abs_yi, V = VCVa,
mods = ~contraception - 1,
random = list(
~1|species,
~1|phylogeny,
~1|obs_id),
R = list(phylogeny = cor_tree),
data = dat_comb,
control = list(optimizer = "Nelder-Mead"))
summary(mod_comb_a)
round(r2_ml(mod_comb_a)*100, 2)
#robust(mod_comb_a, cluster = species)
orchard_plot(mod_comb_a, mod = "contraception",
xlab = "absolute log response ratio (lnRR)", group = "species",
g = FALSE, angle = 45)
all_models(mod_comb_a, mod = "contraception", type = "abs")
# Chunk 18
# variance-covariance matrix for sampling error assuming 0.5 correlation
VCV <- vcalc(vi, species, rho = 0.5, data = dat_pre_post)
#
mod_pp <- rma.mv(yi, V = VCV,
mod = ~ timing,
random = list(
~1|species,
~1|phylogeny,
~1|obs_id),
R = list(phylogeny = cor_tree),
data = dat_pre_post)
summary(mod_pp)
mod_ppb <- rma.mv(yi, V = VCV,
mod = ~ timing - 1,
random = list(
~1|species,
~1|phylogeny,
~1|obs_id),
R = list(phylogeny = cor_tree),
data = dat_pre_post)
summary(mod_ppb)
round(r2_ml(mod_pp), 2)
orchard_plot(mod_ppb, mod = "timing",
xlab = "lnRR (all)", group = "species", g = FALSE)
#| eval: false
# manipulating tree
tdat <- fortify(tree)
tdat2 <- subset(tdat, isTip)
# this ordering matches the tree
ordered_spp <- tdat2$label[order(tdat2$y, decreasing=TRUE)]
pdat %>% mutate(rom_fimmu_mimmu = (Female_Immunological_Mean/Male_Immunological_Mean - 1)*100,
rom_fhorm_mhorm = (Female_Hormonal_Mean/Male_Hormonal_Mean - 1)*100,
rom_fsurg_msurg = (Female_Surgical_Mean/Male_Surgical_Mean - 1)*100,
rom_fimmu_mnorm = (Female_Immunological_Mean/Male_None_Mean - 1)*100,
rom_fhorm_mnorm = (Female_Hormonal_Mean/Male_None_Mean - 1)*100,
rom_fsurg_mnorm = (Female_Surgical_Mean/Male_None_Mean - 1)*100,
rom_fnorm_mimmu = (Female_None_Mean/Male_Immunological_Mean - 1)*100,
rom_fnorm_mhorm = (Female_None_Mean/Male_Hormonal_Mean - 1)*100,
rom_fnorm_msurg = (Female_None_Mean/Male_Surgical_Mean - 1)*100,
rom_fnorm_mnorm = (Female_None_Mean/Male_None_Mean - 1)*100,
#) -> pdat
phylogeny = gsub(" ","_", species)) ->
pdat
# matching the tree ordering and data ordering
pos_order <- match(ordered_spp, pdat$phylogeny)
pdat <- pdat[pos_order, ]
pdat$ordering <- seq(1:nrow(pdat))
#pdat <- gsub(" ", "_", pdat$vertlife.species)
# reformat data to long format
# this ordering is incorrect - I think
pdat$ordering <- seq(1:nrow(pdat))
pdat <- pdat %>% select(species, vertlife.species, order, phylogeny, ordering,
rom_fimmu_mimmu, rom_fhorm_mhorm,rom_fsurg_msurg,
rom_fimmu_mnorm, rom_fhorm_mnorm, rom_fsurg_mnorm,
rom_fnorm_mimmu, rom_fnorm_mhorm, rom_fnorm_msurg,
rom_fnorm_mnorm)
pdat_long <- pdat %>% pivot_longer(cols = c( rom_fimmu_mimmu, rom_fhorm_mhorm,rom_fsurg_msurg,
rom_fimmu_mnorm, rom_fhorm_mnorm, rom_fsurg_mnorm,
rom_fnorm_mimmu, rom_fnorm_mhorm, rom_fnorm_msurg,
rom_fnorm_mnorm))
pdat_long %>% mutate(category = rep(c("F contra./M contra.","F contra./M contra.","F contra./M contra.",
"F contra./M normal", "F contra./M normal", "F contra./M normal",
"F normal/M contra.", "F normal/M contra.", "F normal/M contra.",
"F normal/M normal"), nrow(pdat))) -> pdat_long
pdat_long %>% mutate(min_value = ifelse(is.na(value) == TRUE, NA, ifelse (value < 0, value, 0)),
max_value = ifelse(is.na(value) == TRUE, NA, ifelse (value > 0, value, 0)),
sex_diff = ifelse(min_value == 0, "F live longer", "M live longer")) -> pdat_long
pdat_long$category <- factor(pdat_long$category, levels = rev(c("F contra./M contra.",
"F contra./M normal",
"F normal/M contra.",
"F normal/M normal")),
labels = rev(c("F contra./M contra.",
"F contra./M normal",
"F normal/M contra.",
"F normal/M normal")))
# doing tree figure
# # use getMRCA() to obtain common ancestor nodes to position the order silhouttes
tree.tibble <- tidytree::as_tibble(tree)
ord <- unique(tax$order)
dford <- data.frame(order = ord, node = NA)
ldat <- vector("list", 10)
for (i in ord) {
tip <-  as.vector(as.data.frame(pdat[which(pdat$order == i), "phylogeny"]))
#tip <-  gsub(" ", "_", tip)
if (length(tip) > 1) {
tnode <- numeric(getMRCA(tree, tip = tip$phylogeny))
} else
if (length(tip) == 1) {
tnode <-
match(tip$phylogeny, tree.tibble$label)
}
dford[[2]][dford[[1]] == i] <- tnode
}
tree <- as.ultrametric(tree)
p <-
ggtree(
tree,
layout = "rectangular",
ladderize = TRUE,
size = 0.3,
color = "#454747"
)
pdat %>% select(phylogeny, order) -> odat
p0 <- p %<+% odat +
geom_tippoint(aes(color= order), size = 0.5) + xlim_expand(c(0,170), panel = "Tree") +
guides(color="none")
# Image directory
imgdir <- "icons/zoo/"
p1 <- ggdraw(p0) +
draw_image(paste0(
imgdir,
"Artiodactyla_PhyloPic.8b567be8.An-Ignorant-Atheist.Antilopinae.png"
), y = 0.36, x = 0.46, scale = 0.08) +
draw_image(paste0(
imgdir,
"Perissodactlyla_PhyloPic.071ee517.David-Orr.Equus-ferus-caballus.png"
), y = 0.19, x = 0.46, scale = 0.07) +
draw_image(paste0(
imgdir,
"Carnivora_PhyloPic.34e482b4.An-Ignorant-Atheist.Panthera.png"
), y = 0.08, x = 0.46, scale = 0.07) +
draw_image(paste0(
imgdir,
"Chrioptera_PhyloPic.e7da460a.Margot-Michaud.Chiroptera_Eptesicus_Eptesicus-fuscus_Vespertilio-Noctilio_Vespertilionidae_Vespertilioniformes_Vespertilioninae_Vespertilionoidea.png"
), y = -0.03, x = 0.46, scale = 0.07) +
draw_image(paste0(
imgdir,
"Primates_PhyloPic.071db0d0.Margot-Michaud.Papio_Papio-anubis.png"
), y = -0.20, x = 0.46, scale = 0.07) +
draw_image(paste0(
imgdir,
"Rodentia_PhyloPic.570c7d9e.Alexandra-van-der-Geer.Rattus_Rattus-exulans.png"
), y = -0.37, x = 0.46, scale = 0.07) +
draw_image(paste0(
imgdir,
"PhyloPic.b62bab6e.An-Ignorant-Atheist.Macropus-Macropus.png"
), y = -0.45, x = 0.46, scale = 0.08)
p2 <- ggplot(pdat_long,
aes(x = value, reorder(vertlife.species, -ordering))) +
ggplot2::geom_errorbarh(aes(xmin = min_value, xmax = max_value, colour = sex_diff),
height = 0, show.legend = TRUE, size = 1,
alpha = 0.8 #, position =position_dodge(width = 0.75)
) +
#geom_segment(linewidth = 1, alpha = 0.8, position =position_dodge(width = 0.95)) +
facet_wrap(~ category, ncol = 4, #scales = "free_x"
) +
xlim(-80, 80) +
scale_color_manual(values = c("#CC6677", "#88CCEE"), na.translate = F) +
theme_bw() +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(size = 7),
axis.ticks  = element_blank(),
strip.text = element_text(face = "bold"),
panel.grid.minor.x = element_blank(),
legend.box.background = element_rect(colour = "black")) +
#guides(colour = colour) +
theme(legend.position =  c(0.9, 0.92)) +
labs(colour = "Sex difference") +
xlab("Ratio: female/male (%)") +
theme(legend.key.size = unit(0.25, 'cm')) +
ylab("")
p2
p_phylo2 <- p1 + p2
###
p_sexdiff <- orchard_plot(mod_comb, mod = "contraception",
xlab = "log response ratio (lnRR)", group = "species",
g = FALSE, angle = 45)
p_abs <- orchard_plot(mod_comb_a, mod = "contraception",
xlab = "absolute log response ratio (lnRR)", group = "species",
g = FALSE, angle = 45)
#res2
# putting figs together
###################
## Figure 4
###################
p_phylo2 / (p_sexdiff + p_abs) +
plot_annotation(tag_levels = 'A') +
plot_layout(heights = c(1.5,1.0))
